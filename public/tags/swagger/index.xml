<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swagger on Monoya Blog</title>
    <link>https://monoya.top/tags/swagger/</link>
    <description>Recent content in Swagger on Monoya Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><atom:link href="https://monoya.top/tags/swagger/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot集成Swagger3.0.0</title>
      <link>https://monoya.top/java-web/springboot%E9%9B%86%E6%88%90swagger3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://monoya.top/java-web/springboot%E9%9B%86%E6%88%90swagger3/</guid>
      <description>概述 Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。
总体目标是使客户端和文件系统作为服务器以同样的速度来更新。文件的方法、参数和模型紧密集成到服务器端的代码，允许 API 来始终保持同步。
3.0版本在配置上与2.9稍有差别，包括依赖包改为: springfox-boot-starter，启用注解更改为: @EnableOpenApi等。
swagger 3.0 release notes
引入依赖 在 pom.xml 文件中引入 springfox-boot-starter 依赖，该依赖会自动引入 Swagger 相关依赖
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.springfox&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;springfox-boot-starter&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 自定义配置类 创建一个 Swagger3 配置类, SwaggerConfig
/** * Swagger配置类 */ @Configuration @EnableOpenApi public class SwaggerConfig { @Bean public Docket docket(){ return new Docket(DocumentationType.OAS_30) .apiInfo(apiInfo()).enable(true) .select() //apis： 添加swagger接口提取范围(contoller层包名)  .apis(RequestHandlerSelectors.basePackage(&amp;#34;com.example.troller&amp;#34;)) //.apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class))  .paths(PathSelectors.any()) .build(); } private ApiInfo apiInfo(){ return new ApiInfoBuilder() .title(&amp;#34;XX项目接口文档&amp;#34;) .</description>
    </item>
    
  </channel>
</rss>
