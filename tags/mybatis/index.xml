<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MyBatis on Monoya Blog</title><link>https://monoya.top/tags/mybatis/</link><description>Recent content in MyBatis on Monoya Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-hans</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 05 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://monoya.top/tags/mybatis/index.xml" rel="self" type="application/rss+xml"/><item><title>SpringBoot集成MyBatis</title><link>https://monoya.top/java-web/springboot%E9%9B%86%E6%88%90mybatis/</link><pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate><guid>https://monoya.top/java-web/springboot%E9%9B%86%E6%88%90mybatis/</guid><description>概述 MyBatis是一个Java持久化框架，它通过XML描述符或注解把对象与存储过程或SQL语句关联起来，映射成数据库内对应的纪录。与其他对象关系映射框架不同，MyBatis没有将Java对象与数据库表关联起来，而是将Java方法与SQL语句关联。MyBatis允许用户充分利用数据库的各种功能，例如存储过程、视图、各种复杂的查询以及某数据库的专有特性。
引入依赖 在 pom.xml 文件中引入 mapper-spring-boot-starter 依赖，该依赖会自动引入 MyBaits 相关依赖
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.mybatis.spring.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis-spring-boot-starter&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.1.4&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 配置 application.yml 配置 MyBatis
mybatis: type-aliases-package: com.monoya.cake.business.model # 实体类的存放路径 mapper-locations: classpath:mapper/*.xml # mapper.xml的存放路径</description></item></channel></rss>