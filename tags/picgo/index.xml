<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PicGo on Monoya Blog</title><link>https://monoya.top/tags/picgo/</link><description>Recent content in PicGo on Monoya Blog</description><generator>Hugo -- gohugo.io</generator><language>zh_CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 14 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://monoya.top/tags/picgo/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 github repo + PicGo 搭建博客图床</title><link>https://monoya.top/tech/%E4%BD%BF%E7%94%A8github%E4%BB%93%E5%BA%93%E4%B8%8Epicgo%E5%81%9A%E5%9B%BE%E5%BA%8A/</link><pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate><guid>https://monoya.top/tech/%E4%BD%BF%E7%94%A8github%E4%BB%93%E5%BA%93%E4%B8%8Epicgo%E5%81%9A%E5%9B%BE%E5%BA%8A/</guid><description>创建github repo,并生成token 创建仓库 生成token 进入个人中心设置
进入Developer settings中，选择Personal aceess token,然后Generate new token.
生成 token(Note 部分随便写即可，下边的权限把 repo 相关的打上勾即可)
接下来便会生成一个 token，将它复制下来，因为一旦刷新网页，你将见不到这个 token 了。
下载安装 PicGo 下载并安装PicGo PicGo仓库。
Github图床配置 Github图床配置 PicGo的Github图床配置有固定的格式: 仓库名格式为:用户名/仓库名 分支名设置为:master Token设置为:上面获取到的token 存储路径可以随意,如设置为:img/ 自定义域名格式为:
https://raw.githubusercontent.com/用户名/仓库名/分支名 githubPlus插件配置 githubPlus可以同步相册,当在PigGo的相册中删除图片后,会同步删除github上的图片.
同步更新删除Github 在插件设置的搜索框中,输入插件的名称:picgo-plugin-github-plus,然后安装这个插件. 配置githubPlus 这个插件的配置和上面的Github图片配置差不多一样. PicGo其他配置 上传快捷方式 进入PicGo设置，修改上传快捷键(像这样，配合Snipaste食用更佳，每次F1截完图，选择复制，然后按绑定的组合键即可实现快速上传（快捷键上传的是剪切板中的东西）)
参考文档 PicGo GitHub图床 配置picgo成为多平台图床工具</description></item></channel></rss>